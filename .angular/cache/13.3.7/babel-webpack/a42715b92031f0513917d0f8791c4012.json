{"ast":null,"code":"import _asyncToGenerator from \"/Users/amtagglobal/Desktop/Projects/angular-webrtc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nimport * as i2 from \"src/app/services/signaling.service\";\nconst _c0 = [\"webcamVideo\"];\nexport class HostComponent {\n  constructor(socket, signalingService) {\n    this.socket = socket;\n    this.signalingService = signalingService;\n    this.currentUserId = uuidv4();\n    this.servers = {\n      iceServers: [{\n        urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302']\n      }],\n      iceCandidatePoolSize: 10\n    };\n    this.pc = new RTCPeerConnection(this.servers);\n  }\n\n  ngOnInit() {\n    console.log(`Initialize Peer with id ${this.currentUserId}`);\n    this.createStream();\n  }\n\n  createStream() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.localStream = yield navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      });\n\n      _this.localStream.getTracks().forEach(track => {\n        var _a;\n\n        (_a = _this.pc) === null || _a === void 0 ? void 0 : _a.addTrack(track, _this.localStream);\n      });\n\n      if (_this.webcamVideo != undefined) {\n        _this.webcamVideo.srcObject = _this.localStream;\n      }\n    })();\n  }\n\n  onLoadedMetadata(event) {\n    event.target.play();\n  }\n\n}\n\nHostComponent.ɵfac = function HostComponent_Factory(t) {\n  return new (t || HostComponent)(i0.ɵɵdirectiveInject(i1.Socket), i0.ɵɵdirectiveInject(i2.SignalingService));\n};\n\nHostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HostComponent,\n  selectors: [[\"app-host\"]],\n  viewQuery: function HostComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.webcamVideo = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"autoplay\", \"\", \"playsinline\", \"\"], [\"webcamVideo\", \"\"]],\n  template: function HostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"video\", 0, 1);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob3N0LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/Users/amtagglobal/Desktop/Projects/angular-webrtc/src/app/pages/host/host.component.ts"],"names":["v4","uuidv4","i0","i1","i2","_c0","HostComponent","constructor","socket","signalingService","currentUserId","servers","iceServers","urls","iceCandidatePoolSize","pc","RTCPeerConnection","ngOnInit","console","log","createStream","localStream","navigator","mediaDevices","getUserMedia","audio","video","getTracks","forEach","track","_a","addTrack","webcamVideo","undefined","srcObject","onLoadedMetadata","event","target","play","ɵfac","HostComponent_Factory","t","ɵɵdirectiveInject","Socket","SignalingService","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","HostComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","HostComponent_Template","ɵɵelement","styles"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nimport * as i2 from \"src/app/services/signaling.service\";\nconst _c0 = [\"webcamVideo\"];\nexport class HostComponent {\n    constructor(socket, signalingService) {\n        this.socket = socket;\n        this.signalingService = signalingService;\n        this.currentUserId = uuidv4();\n        this.servers = {\n            iceServers: [\n                {\n                    urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n                },\n            ],\n            iceCandidatePoolSize: 10,\n        };\n        this.pc = new RTCPeerConnection(this.servers);\n    }\n    ngOnInit() {\n        console.log(`Initialize Peer with id ${this.currentUserId}`);\n        this.createStream();\n    }\n    async createStream() {\n        this.localStream = await navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n        this.localStream.getTracks().forEach((track) => {\n            var _a;\n            (_a = this.pc) === null || _a === void 0 ? void 0 : _a.addTrack(track, this.localStream);\n        });\n        if (this.webcamVideo != undefined) {\n            this.webcamVideo.srcObject = this.localStream;\n        }\n    }\n    onLoadedMetadata(event) {\n        event.target.play();\n    }\n}\nHostComponent.ɵfac = function HostComponent_Factory(t) { return new (t || HostComponent)(i0.ɵɵdirectiveInject(i1.Socket), i0.ɵɵdirectiveInject(i2.SignalingService)); };\nHostComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: HostComponent, selectors: [[\"app-host\"]], viewQuery: function HostComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.webcamVideo = _t.first);\n    } }, decls: 2, vars: 0, consts: [[\"autoplay\", \"\", \"playsinline\", \"\"], [\"webcamVideo\", \"\"]], template: function HostComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"video\", 0, 1);\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob3N0LmNvbXBvbmVudC5zY3NzIn0= */\"] });\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/amtagglobal/Desktop/Projects/angular-webrtc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-socket-io\";\nimport * as i3 from \"src/app/services/signaling.service\";\nexport class ClientComponent {\n  constructor(route, socket, signalingService) {\n    this.route = route;\n    this.socket = socket;\n    this.signalingService = signalingService;\n    this.currentUserId = uuidv4();\n    this.servers = {\n      iceServers: [{\n        urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302']\n      }],\n      iceCandidatePoolSize: 10\n    };\n    this.remoteStream = new MediaStream();\n    this.pc = new RTCPeerConnection(this.servers);\n  }\n\n  ngOnInit() {\n    console.log(`Initialize Peer with id ${this.currentUserId}`);\n    this.route.params.subscribe(params => {\n      console.log(params);\n      this.socket.emit('join', params['roomId'], this.currentUserId);\n      this.signalingService.sendEvent('join', {\n        roomId: params['roomId'],\n        userId: this.currentUserId\n      });\n    });\n    this.loadStreaming();\n  }\n\n  loadStreaming() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.pc.ontrack = event => {\n        event.streams[0].getTracks().forEach(track => {\n          _this.remoteStream.addTrack(track);\n        });\n      };\n    })();\n  }\n\n}\n\nClientComponent.ɵfac = function ClientComponent_Factory(t) {\n  return new (t || ClientComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Socket), i0.ɵɵdirectiveInject(i3.SignalingService));\n};\n\nClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientComponent,\n  selectors: [[\"app-client\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"playsinline\", \"\", \"autoplay\", \"\", \"preload\", \"auto\", \"poster\", \"loading.gif\", 3, \"src\"]],\n  template: function ClientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"video\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"sources":["/Users/amtagglobal/Desktop/Projects/angular-webrtc/src/app/pages/client/client.component.ts"],"names":["v4","uuidv4","i0","i1","i2","i3","ClientComponent","constructor","route","socket","signalingService","currentUserId","servers","iceServers","urls","iceCandidatePoolSize","remoteStream","MediaStream","pc","RTCPeerConnection","ngOnInit","console","log","params","subscribe","emit","sendEvent","roomId","userId","loadStreaming","ontrack","event","streams","getTracks","forEach","track","addTrack","ɵfac","ClientComponent_Factory","t","ɵɵdirectiveInject","ActivatedRoute","Socket","SignalingService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ClientComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","videoUrl","ɵɵsanitizeUrl","styles"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-socket-io\";\nimport * as i3 from \"src/app/services/signaling.service\";\nexport class ClientComponent {\n    constructor(route, socket, signalingService) {\n        this.route = route;\n        this.socket = socket;\n        this.signalingService = signalingService;\n        this.currentUserId = uuidv4();\n        this.servers = {\n            iceServers: [\n                {\n                    urls: ['stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n                },\n            ],\n            iceCandidatePoolSize: 10,\n        };\n        this.remoteStream = new MediaStream();\n        this.pc = new RTCPeerConnection(this.servers);\n    }\n    ngOnInit() {\n        console.log(`Initialize Peer with id ${this.currentUserId}`);\n        this.route.params.subscribe((params) => {\n            console.log(params);\n            this.socket.emit('join', params['roomId'], this.currentUserId);\n            this.signalingService.sendEvent('join', {\n                roomId: params['roomId'],\n                userId: this.currentUserId\n            });\n        });\n        this.loadStreaming();\n    }\n    async loadStreaming() {\n        this.pc.ontrack = event => {\n            event.streams[0].getTracks().forEach(track => {\n                this.remoteStream.addTrack(track);\n            });\n        };\n    }\n}\nClientComponent.ɵfac = function ClientComponent_Factory(t) { return new (t || ClientComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Socket), i0.ɵɵdirectiveInject(i3.SignalingService)); };\nClientComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ClientComponent, selectors: [[\"app-client\"]], decls: 1, vars: 1, consts: [[\"playsinline\", \"\", \"autoplay\", \"\", \"preload\", \"auto\", \"poster\", \"loading.gif\", 3, \"src\"]], template: function ClientComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"video\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"src\", ctx.videoUrl, i0.ɵɵsanitizeUrl);\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGllbnQuY29tcG9uZW50LnNjc3MifQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}